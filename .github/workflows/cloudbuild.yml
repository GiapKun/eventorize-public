name: Deploy to Cloud Run

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from all secrets
        run: |
          echo "Creating .env file from all secrets"
          for secret in $(jq -r 'keys[]' <<< '${{ toJson(secrets) }}')
          do
            if [ "$secret" != "SERVICE_ACCOUNT_KEY_GCP" ]; then
              echo "$secret=${!secret}" >> .env
          fi
          done
        shell: bash

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ vars.REGION_ARTIFACTS_GCP }}-docker.pkg.dev --quiet

      - name: Build image
        run: |
          docker build -t ${{ vars.IMAGE_NAME }}:latest .

      - name: Tag image
        run: |
          docker tag ${{ vars.IMAGE_NAME }}:latest ${{ vars.REGION_ARTIFACTS_GCP }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.REPOSITORY }}/${{ vars.IMAGE_NAME }}:latest

      - name: Google Cloud Auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY_GCP }}"

      - name: Push image
        run: |
          docker push ${{ vars.REGION_ARTIFACTS_GCP }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.REPOSITORY }}/${{ vars.IMAGE_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY_GCP }}"

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ vars.PROJECT_NAME }} \
            --image ${{ vars.REGION_ARTIFACTS_GCP }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.REPOSITORY }}/${{ vars.IMAGE_NAME }}:latest \
            --platform managed \
            --region ${{ vars.REGION_CLOUD_RUN_GCP }} \
            --allow-unauthenticated
